buildscript {
    repositories {
        mavenLocal()
        maven { url 'https://maven.fabric.io/public' }
    }

    dependencies {
        classpath 'io.fabric.tools:gradle:1.+'
    }
}
apply plugin: 'com.android.application'
apply plugin: 'io.fabric'

//android.enforceUniquePackageName=false

/**
 * The react.gradle file registers two tasks: bundleDebugJsAndAssets and bundleReleaseJsAndAssets.
 * These basically call `react-native bundle` with the correct arguments during the Android build
 * cycle. By default, bundleDebugJsAndAssets is skipped, as in debug/dev mode we prefer to load the
 * bundle directly from the development server. Below you can see all the possible configurations
 * and their defaults. If you decide to add a configuration block, make sure to add it before the
 * `apply from: "react.gradle"` line.
 *
 * project.ext.react = [
 *   // the name of the generated asset file containing your JS bundle
 *   bundleAssetName: "index.android.bundle",
 *
 *   // the entry file for bundle generation
 *   entryFile: "index.android.js",
 *
 *   // whether to bundle JS and assets in debug mode
 *   bundleInDebug: false,
 *
 *   // whether to bundle JS and assets in release mode
 *   bundleInRelease: true,
 *
 *   // the root of your project, i.e. where "package.json" lives
 *   root: "../../",
 *
 *   // where to put the JS bundle asset in debug mode
 *   jsBundleDirDebug: "$buildDir/intermediates/assets/debug",
 *
 *   // where to put the JS bundle asset in release mode
 *   jsBundleDirRelease: "$buildDir/intermediates/assets/release",
 *
 *   // where to put drawable resources / React Native assets, e.g. the ones you use via
 *   // require('./image.png')), in debug mode
 *   resourcesDirDebug: "$buildDir/intermediates/res/merged/debug",
 *
 *   // where to put drawable resources / React Native assets, e.g. the ones you use via
 *   // require('./image.png')), in release mode
 *   resourcesDirRelease: "$buildDir/intermediates/res/merged/release",
 *
 *   // by default the gradle tasks are skipped if none of the JS files or assets change; this means
 *   // that we don't look at files in android/ or ios/ to determine whether the tasks are up to
 *   // date; if you have any other folders that you want to ignore for performance reasons (gradle
 *   // indexes the entire tree), add them here. Alternatively, if you have JS files in android/
 *   // for example, you might want to remove it from here.
 *   inputExcludes: ["android/**", "ios/**"]
 * ]
 */

apply from: "react.gradle"


android {
    dexOptions { 
      incremental true 
      javaMaxHeapSize "4g" 
    } 

    compileSdkVersion 23
    buildToolsVersion "23.0.1"

    defaultConfig {
        applicationId "com.sproutli.app"
        minSdkVersion 16
        targetSdkVersion 22
        versionCode 232000
        versionName "2.3.2"
        ndk {
            abiFilters "armeabi-v7a", "x86"
        }
        multiDexEnabled true
    }
    signingConfigs {
      release {
        storeFile file(SPROUTLI_RELEASE_STORE_FILE)
        storePassword SPROUTLI_RELEASE_STORE_PASSWORD
        keyAlias SPROUTLI_RELEASE_KEY_ALIAS
        keyPassword SPROUTLI_RELEASE_STORE_PASSWORD
      }
    }
    buildTypes {
        release {
          minifyEnabled false
          proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
          signingConfig signingConfigs.release
        }
    }
}

repositories {
  maven {
    url 'https://dl.bintray.com/intercom/intercom-maven'
  }
    maven { url 'https://maven.fabric.io/public' }
}

dependencies {
  compile 'com.android.support:multidex:1.0.0'
  compile fileTree(dir: 'libs', include: ['*.jar'])
  compile 'com.android.support:appcompat-v7:23.0.1'
  //compile project(':ReactAndroid')
  compile 'com.facebook.react:react-native:0.15.1'
  compile project(':react-native-vector-icons')
  compile 'com.google.android.gms:play-services:8.1.0'
  compile project(':RNMaterialKit')
  compile project(':RNWebIntent')
  compile project(':RNCallIntent')
  compile project(':RNMapIntent')
  compile "com.android.support:appcompat-v7:23.0.1"
  compile ('io.intercom.android:intercom-sdk:1.+@aar') {
    transitive = true
  }
    compile('com.crashlytics.sdk.android:crashlytics:2.5.2@aar') {
        transitive = true;
    }
}
